<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TextToXmlApiNet</name>
    </assembly>
    <members>
        <member name="M:TextToXmlApiNet.Controllers.ConvertController.ConvertAsync(TextToXmlApiNet.Models.Validation.ConvertRequest)">
            <summary>
            Enqueues a background job to convert JSON to XML and validate.
            </summary>
        </member>
        <member name="M:TextToXmlApiNet.Controllers.ConvertController.ConvertToXml(TextToXmlApiNet.Models.Validation.ConvertRequest)">
            <summary>
            Converts JSON to validated XML and returns as raw XML if valid.
            </summary>
        </member>
        <member name="M:TextToXmlApiNet.Controllers.ConvertController.GetLatestXml">
            <summary>
            Get the latest XML stored in the database.
            </summary>
        </member>
        <member name="T:TextToXmlApiNet.Controllers.EncryptionController">
            <summary>
            Handles encryption and decryption using AES, RSA, and Base64.
            </summary>
        </member>
        <member name="M:TextToXmlApiNet.Controllers.EncryptionController.Encrypt(EncryptionRequest)">
            <summary>
            Encrypts a string using the specified algorithm (AES, RSA, or BASE64).
            </summary>
            <param name="request">The encryption request containing text and algorithm.</param>
            <returns>The encrypted result in base64 format.</returns>
            <response code="200">Returns the encrypted text.</response>
            <response code="400">If the algorithm is missing or invalid.</response>
            <response code="500">If an error occurs during encryption.</response>
        </member>
        <member name="M:TextToXmlApiNet.Controllers.EncryptionController.Decrypt(EncryptionRequest)">
            <summary>
            Decrypts a string using the specified algorithm (AES, RSA, or BASE64).
            </summary>
            <param name="request">The decryption request containing text and algorithm.</param>
            <returns>The decrypted plain text.</returns>
            <response code="200">Returns the decrypted result.</response>
            <response code="400">If the algorithm is missing or invalid.</response>
            <response code="500">If an error occurs during decryption.</response>
        </member>
        <member name="T:TextToXmlApiNet.Controllers.SystemController">
            <summary>
            API health status
            </summary>
        </member>
        <member name="M:TextToXmlApiNet.Controllers.SystemController.Health">
            <summary>
            Health Check
            </summary>
        </member>
        <member name="M:TextToXmlApiNet.Controllers.SystemController.Home">
            <summary>
            Welcome endpoint
            </summary>
        </member>
        <member name="T:TextToXmlApiNet.Controllers.ValidationController">
            <summary>
            Handles validation of input fields using custom rules defined in JSON.
            </summary>
        </member>
        <member name="M:TextToXmlApiNet.Controllers.ValidationController.Validate(TextToXmlApiNet.Models.Validation.UnifiedValidationRequest)">
            <summary>
            Validates a single field or multiple fields using predefined rules.
            </summary>
            <param name="request">UnifiedValidationRequest object with either FieldName + FieldValue or Fields dictionary.</param>
            <returns>Validation result(s)</returns>
            <response code="200">Returns validation result(s)</response>
            <response code="400">Bad input request</response>
        </member>
        <member name="T:TextToXmlApiNet.Migrations.CreateXmlStorageTable">
            <inheritdoc />
        </member>
        <member name="M:TextToXmlApiNet.Migrations.CreateXmlStorageTable.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TextToXmlApiNet.Migrations.CreateXmlStorageTable.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:TextToXmlApiNet.Migrations.CreateXmlStorageTable.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
    </members>
</doc>
